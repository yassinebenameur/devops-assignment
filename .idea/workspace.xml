<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e8c96524-ccb2-4123-809b-61e3569f3374" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/demo/img_2.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/demo/img_3.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/demo/img_4.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DockerExecCommand">
    <ExecCommand>
      <option name="command" value="ping mongo" />
      <option name="imageId" value="sha256:9af25ce9bb203643e5b51484dfcbd7c3be3d63ff784f2cc89f3716c74b9a6ef1" />
    </ExecCommand>
    <ExecCommand>
      <option name="command" value="ping 10.0.26.7" />
      <option name="imageId" value="sha256:f2760e9ca5298438d155da85d166bbc938645a575b43f445e1b35c2ee21b1c16" />
    </ExecCommand>
    <ExecCommand>
      <option name="command" value="ping mongo" />
      <option name="imageId" value="sha256:f2760e9ca5298438d155da85d166bbc938645a575b43f445e1b35c2ee21b1c16" />
    </ExecCommand>
    <ExecCommand>
      <option name="command" value="telnet mongo:27017" />
      <option name="imageId" value="sha256:f2760e9ca5298438d155da85d166bbc938645a575b43f445e1b35c2ee21b1c16" />
    </ExecCommand>
    <ExecCommand>
      <option name="command" value="ipconfig" />
      <option name="imageId" value="sha256:0d10880528e0cf02b72ba1938dc833f6365598a087a44cd32856d096f9b49c9a" />
    </ExecCommand>
    <ExecCommand>
      <option name="command" value="ping node-js-app" />
      <option name="imageId" value="sha256:0d10880528e0cf02b72ba1938dc833f6365598a087a44cd32856d096f9b49c9a" />
    </ExecCommand>
    <ExecCommand>
      <option name="command" value="ping mongo" />
      <option name="imageId" value="sha256:1c61ff7d9bd1d63e9c4932cc1248479db4e400ded4568702892e67a4a36ae929" />
    </ExecCommand>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="2" />
  </component>
  <component name="ProjectId" id="1lYmf2EmPOxLXEfe4ue1H3Z20zg" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="javascript.nodejs.core.library.configured.version" value="12.19.0" />
    <property name="javascript.nodejs.core.library.typings.version" value="12.19.0" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/.." />
    <property name="nodejs_interpreter_path" value="node" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="socker stack deploy -c docker-compose.yml stack" />
      <command value="docker stack rm stack" />
      <command value="docker stack deploy -c docker-compose.yml stack" />
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration name="app.js" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/app.js" working-dir="$PROJECT_DIR$">
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="" />
          <option name="buildCliOptions" value="" />
          <option name="command" value="" />
          <option name="containerName" value="nodejs" />
          <option name="entrypoint" value="" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostPort" value="80" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="commandLineOptions" value="" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mongo: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongo" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.node-js-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="node-js-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.node-js-app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mongo: Compose Deployment" />
        <item itemvalue="Node.js.app.js" />
        <item itemvalue="Docker.Dockerfile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e8c96524-ccb2-4123-809b-61e3569f3374" name="Default Changelist" comment="" />
      <created>1607782498777</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1607782498777</updated>
      <workItem from="1607782500254" duration="9497000" />
      <workItem from="1607803831355" duration="13917000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>